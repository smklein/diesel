error[E0277]: the trait bound `FromClause<users::table>: AppearsInFromClause<posts::table>` is not satisfied
  --> tests/fail/invalid_group_by.rs:26:10
   |
26 |         .group_by(posts::id)
   |          ^^^^^^^^ the trait `AppearsInFromClause<posts::table>` is not implemented for `FromClause<users::table>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
note: required for `posts::columns::id` to implement `AppearsInQuery<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/invalid_group_by.rs:27:10
   |
27 |         .select(users::id)
   |          ^^^^^^ type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::No`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
note: required for `users::columns::id` to implement `ValidGrouping<posts::columns::id>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

error[E0277]: the trait bound `FromClause<users::table>: AppearsInFromClause<posts::table>` is not satisfied
  --> tests/fail/invalid_group_by.rs:34:10
   |
34 |         .group_by(posts::id)
   |          ^^^^^^^^ the trait `AppearsInFromClause<posts::table>` is not implemented for `FromClause<users::table>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
note: required for `posts::columns::id` to implement `AppearsInQuery<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<users::table>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>` to implement `GroupByDsl<posts::columns::id>`

error[E0277]: the trait bound `FromClause<Alias<user1>>: AppearsInFromClause<posts::table>` is not satisfied
  --> tests/fail/invalid_group_by.rs:42:10
   |
42 |         .group_by(posts::id)
   |          ^^^^^^^^ the trait `AppearsInFromClause<posts::table>` is not implemented for `FromClause<Alias<user1>>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
note: required for `posts::columns::id` to implement `AppearsInQuery<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<posts::columns::id>`

error[E0277]: the trait bound `AliasedField<user1, users::columns::id>: ValidGrouping<posts::columns::id>` is not satisfied
  --> tests/fail/invalid_group_by.rs:43:17
   |
43 |         .select(user_alias.field(users::id))
   |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<posts::columns::id>` is not implemented for `AliasedField<user1, users::columns::id>`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <AliasedField<S, C> as ValidGrouping<()>>
             <AliasedField<S, C2> as ValidGrouping<AliasedField<S, C1>>>
   = note: required for `SelectStatement<FromClause<Alias<user1>>, DefaultSelectClause<FromClause<...>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
   |        ------ required by a bound in this associated function
...
   |         Self: methods::SelectDsl<Selection>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`

error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:48:10
   |
48 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsInQuery<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<post1, posts::columns::id>: IsContainedInGroupBy<users::columns::id>` is not satisfied
  --> tests/fail/invalid_group_by.rs:49:10
   |
49 |         .select(users::id)
   |          ^^^^^^ the trait `IsContainedInGroupBy<users::columns::id>` is not implemented for `AliasedField<post1, posts::columns::id>`
   |
   = help: the following other types implement trait `IsContainedInGroupBy<T>`:
             <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
             <posts::columns::id as IsContainedInGroupBy<users::columns::id>>
             <users::columns::name as IsContainedInGroupBy<users::columns::name>>
             <users::columns::name as IsContainedInGroupBy<users::columns::id>>
             <users::columns::id as IsContainedInGroupBy<posts::columns::id>>
             <users::columns::id as IsContainedInGroupBy<users::columns::name>>
             <users::columns::id as IsContainedInGroupBy<users::columns::id>>
             <pg::metadata_lookup::pg_namespace::columns::nspname as IsContainedInGroupBy<pg::metadata_lookup::pg_namespace::columns::nspname>>
           and $N others
note: required for `users::columns::id` to implement `ValidGrouping<AliasedField<post1, posts::columns::id>>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

error[E0277]: the trait bound `FromClause<Alias<user1>>: AppearsInFromClause<Alias<post1>>` is not satisfied
  --> tests/fail/invalid_group_by.rs:54:10
   |
54 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ the trait `AppearsInFromClause<Alias<post1>>` is not implemented for `FromClause<Alias<user1>>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsInQuery<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<user1, users::columns::id>: ValidGrouping<AliasedField<post1, posts::columns::id>>` is not satisfied
  --> tests/fail/invalid_group_by.rs:55:17
   |
55 |         .select(user_alias.field(users::id))
   |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<AliasedField<post1, posts::columns::id>>` is not implemented for `AliasedField<user1, users::columns::id>`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <AliasedField<S, C> as ValidGrouping<()>>
             <AliasedField<S, C2> as ValidGrouping<AliasedField<S, C1>>>
   = note: required for `SelectStatement<FromClause<Alias<user1>>, DefaultSelectClause<FromClause<...>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
   |        ------ required by a bound in this associated function
...
   |         Self: methods::SelectDsl<Selection>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`

error[E0277]: the trait bound `FromClause<Alias<user1>>: AppearsInFromClause<posts::table>` is not satisfied
  --> tests/fail/invalid_group_by.rs:61:10
   |
61 |         .group_by(posts::id)
   |          ^^^^^^^^ the trait `AppearsInFromClause<posts::table>` is not implemented for `FromClause<Alias<user1>>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
note: required for `posts::columns::id` to implement `AppearsInQuery<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::SelectClause<AliasedField<user1, users::columns::id>>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:67:10
   |
67 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsInQuery<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<users::table>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `FromClause<Alias<user1>>: AppearsInFromClause<Alias<post1>>` is not satisfied
  --> tests/fail/invalid_group_by.rs:73:10
   |
73 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ the trait `AppearsInFromClause<Alias<post1>>` is not implemented for `FromClause<Alias<user1>>`
   |
   = help: the trait `AppearsInFromClause<QS1>` is implemented for `FromClause<QS2>`
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsInQuery<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::SelectClause<AliasedField<user1, users::columns::id>>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`
